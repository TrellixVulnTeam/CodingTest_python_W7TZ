힙(Heap) : 트리기반의 자료구조  (파이썬에서는 최소 힙만 구현되어 있음)

* 최소힙 : 부모노드가 항상 자식노드보다 작은 트리구조, BST처럼 좌우에 대한 관계가 정의되어 정렬되어 있지는 않음
특별히 자식이 둘인 힙을 이진 힙 (Binary Heap)이라 함
  
힙  -----> 다익스트라알고리즘, 힙정렬, 최소신장트리를 구현하는 프림알고리즘, 중앙값의 근사값을 빠르게 구할 때 

힙에서 최소 또는 최대값 추출시, 시간복잡도 :  O(1) 

In Python : 
-------------------------------------------------------------------------------------------------------------------------------
import heapq

nums=[3,2,3,1,2,4,5,5,6]
heapq.heapify(nums)       # heapify는 다른 변수에 객체 복사가 안됨. 해당 객체를 바로 (sort와 똑같음)

k=4
print(heapq.nlargest(k,nums))   # 가장 큰 k개의 요소를 가져옴

print(heapq.nsmallest(k,nums)) # 가장 작은 k개의 요소를 가져옴

x=10
heapq.heappush(nums, x)         #  x를 힙큐에 집어넣음 (자동으로 정렬됨)
print(nums)

heapq.heappop(nums)              # 힙큐에서 가장 작은 값이 pop됨. 
print(nums)

# pop하지 않고 가장 작은 요소를 반환하고 싶다면 그냥 인덱스로 접근하면 됌.
print(nums[0])

x=20
sm=heapq.heapreplace(nums, x)  # 힙큐에서 가장 작은 값이 pop되고 새로운 x가 push됨 
print(sm,nums)

----------------------------------------------------------------------------------------------------------------------------------



 
